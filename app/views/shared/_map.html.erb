<link href="http://code.google.com/apis/maps/documentation/javascript/examples/default.css" rel="stylesheet" type="text/css" />

<div style='width: 520px;'>
  <div id="map" style='width: 100%; height: 550px;'></div>
</div>

<script>
    function initialize() {
        markers = <%=raw @pinga_markers.to_json %>;
        user_listening_radius = <%= @user.listening_radius %>
        image_paths = {};
        <% @categories.each do |category| %>
        image_paths["<%= category.title %>"] = {}
        image_paths["<%= category.title %>"]["active"] = '<%= asset_path("#{category.title}_active.png") %>';
        image_paths["<%= category.title %>"]["pending"] = '<%= asset_path("#{category.title}_pending.png") %>';
        image_paths["<%= category.title %>"]["outside"] = '<%= asset_path("#{category.title}_outside.png") %>';
        <% end %>
        console.log(image_paths);
        console.log(image_paths);


        console.log(image_paths);
        pingaMarkers = [];
        infos = [];
        console.log("changed five");

//        var map_style = [{featureType:"administrative",stylers:[{visibility:"off"}]},{featureType:"administrative.locality",elementType:"labels",stylers:[{visibility:"simplified"},{saturation:100},{color:"#ff4702"}]},{featureType:"road",stylers:[{saturation:-100},{visibility:"simplified"},{lightness:-25}]},{featureType:"water",stylers:[{color:"#5f1bff"},{saturation:100},{visibility:"on"},{lightness:-38}]},{featureType:"landscape.natural.terrain",stylers:[{visibility:"off"}]},{featureType:"poi",stylers:[{visibility:"off"}]},{featureType:"poi.park",stylers:[{visibility:"simplified"},{color:"#d3ff44"},{lightness:-32},{saturation:30}]},{featureType:"landscape.natural",elementType:"geometry.fill",stylers:[{visibility:"on"},{color:"#797679"},{gamma:4.92},{lightness:-47}]},{}]
//        var map_style = [{featureType:"water",elementType:"geometry",stylers:[{color:"#a2daf2"}]},{featureType:"landscape.man_made",elementType:"geometry",stylers:[{color:"#f7f1df"}]},{featureType:"landscape.natural",elementType:"geometry",stylers:[{color:"#d0e3b4"}]},{featureType:"landscape.natural.terrain",elementType:"geometry",stylers:[{visibility:"off"}]},{featureType:"poi.park",elementType:"geometry",stylers:[{color:"#bde6ab"}]},{featureType:"poi",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"poi.medical",elementType:"geometry",stylers:[{color:"#fbd3da"}]},{featureType:"poi.business",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"geometry.stroke",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"road.highway",elementType:"geometry.fill",stylers:[{color:"#ffe15f"}]},{featureType:"road.highway",elementType:"geometry.stroke",stylers:[{color:"#efd151"}]},{featureType:"road.arterial",elementType:"geometry.fill",stylers:[{color:"#ffffff"}]},{featureType:"road.local",elementType:"geometry.fill",stylers:[{color:"black"}]},{featureType:"transit.station.airport",elementType:"geometry.fill",stylers:[{color:"#cfb2db"}]}]
//        var map_style = [{featureType:"road",elementType:"geometry",stylers:[{lightness:100},{visibility:"simplified"}]},{featureType:"water",elementType:"geometry",stylers:[{visibility:"on"},{color:"#C6E2FF"}]},{featureType:"poi",elementType:"geometry.fill",stylers:[{color:"#C5E3BF"}]},{featureType:"road",elementType:"geometry.fill",stylers:[{color:"#D1D1B8"}]}];
//        var map_style = [{featureType:"landscape.natural",stylers:[{saturation:-100},{lightness:100}]},{featureType:"water",stylers:[{saturation:-100},{lightness:-86}]},{elementType:"labels.text.stroke",stylers:[{saturation:-100},{lightness:100}]},{featureType:"road",elementType:"geometry.stroke",stylers:[{saturation:-100},{lightness:-75}]},{featureType:"road",elementType:"geometry.fill",stylers:[{saturation:-100},{lightness:97}]},{featureType:"poi.park",stylers:[{saturation:-100},{lightness:-100}]},{featureType:"poi.park",elementType:"labels.text.fill",stylers:[{saturation:-100},{lightness:100}]},{featureType:"road",elementType:"labels",stylers:[{visibility:"on"}]},{featureType:"landscape.man_made",stylers:[{saturation:-100},{lightness:-68}]},{featureType:"administrative",elementType:"labels.text.fill",stylers:[{saturation:-100},{lightness:100}]},{featureType:"administrative",elementType:"labels.text.stroke",stylers:[{saturation:-100},{lightness:-100}]},{featureType:"poi",stylers:[{saturation:-100},{lightness:91}]},{featureType:"poi",elementType:"labels.text.fill",stylers:[{saturation:-100},{lightness:-100}]},{featureType:"transit.station",stylers:[{saturation:-100},{lightness:-22}]},{featureType:"landscape.man_made",elementType:"geometry.stroke",stylers:[{hue:"#ff004c"},{saturation:-100},{lightness:44}]},{elementType:"labels.text.fill",stylers:[{saturation:1},{lightness:-100}]},{elementType:"labels.text.stroke",stylers:[{saturation:-100},{lightness:100}]},{featureType:"administrative.locality",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"water",elementType:"labels",stylers:[{visibility:"off"}]},{featureType:"administrative.locality",elementType:"labels",stylers:[{visibility:"on"}]},{featureType:"water",elementType:"labels",stylers:[{visibility:"on"}]}]
//        var map_style = [{stylers:[{visibility:"on"},{saturation:-100},{gamma:.54}]},{featureType:"road",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"water",stylers:[{color:"#4d4946"}]},{featureType:"poi",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"poi",elementType:"labels.text",stylers:[{visibility:"simplified"}]},{featureType:"road",elementType:"geometry.fill",stylers:[{color:"#ffffff"}]},{featureType:"road.local",elementType:"labels.text",stylers:[{visibility:"simplified"}]},{featureType:"water",elementType:"labels.text.fill",stylers:[{color:"#ffffff"}]},{featureType:"transit.line",elementType:"geometry",stylers:[{gamma:.48}]},{featureType:"transit.station",elementType:"labels.icon",stylers:[{visibility:"off"}]},{featureType:"road",elementType:"geometry.stroke",stylers:[{gamma:7.18}]}]
        var map_style = [{featureType:"water",elementType:"all",stylers:[{hue:"black"},{saturation:100},{lightness:-5},{visibility:"on"}]},{featureType:"poi",elementType:"all",stylers:[{hue:"#ffffff"},{saturation:-100},{lightness:100},{visibility:"off"}]},{featureType:"transit",elementType:"all",stylers:[{hue:"#ffffff"},{saturation:0},{lightness:100},{visibility:"off"}]},{featureType:"road.highway",elementType:"geometry",stylers:[{hue:"#deecec"},{saturation:-73},{lightness:72},{visibility:"on"}]},{featureType:"road.highway",elementType:"labels",stylers:[{hue:"#bababa"},{saturation:-100},{lightness:25},{visibility:"on"}]},{featureType:"landscape",elementType:"geometry",stylers:[{hue:"#e3e3e3"},{saturation:-100},{lightness:0},{visibility:"on"}]},{featureType:"road",elementType:"geometry",stylers:[{hue:"#ffffff"},{saturation:-100},{lightness:100},{visibility:"simplified"}]},{featureType:"administrative",elementType:"labels",stylers:[{hue:"#59cfff"},{saturation:100},{lightness:34},{visibility:"on"}]}]
        var mapOptions = {
            zoom: 13,

            center: new google.maps.LatLng(<%= @user.latitude %>, <%= @user.longitude %>),
            styles:map_style
        };

        map = new google.maps.Map(document.getElementById('map'),
                mapOptions);

//        var image = new google.maps.MarkerImage(
//                'http://plebeosaur.us/etc/map/bluedot_retina.png',
//                null, // size
//                null, // origin
//                new google.maps.Point( 8, 8 ), // anchor (move to center of marker)
//                new google.maps.Size( 17, 17 ) // scaled size (required for Retina display icon)
//        );
        user_marker = new google.maps.Marker({
            position: map.getCenter(),
            map: map,
            icon: '<%= asset_path('pingaMarker.png') %>',
            title: "user"
        });
        user_marker.setDraggable (true);

        newPingaMarker = new google.maps.Marker({
            position: map.getCenter(), // this should be the user's location
            map: null,
            icon: '<%= asset_path('pingaMarker.png') %>',
            title: 'Your current location',
            draggable: true
        });

        markers.forEach(function(marker) {
            addMarker(marker);
        });

        var radiusOptions = {
            strokeColor:"#0000FF",strokeOpacity: 1, strokeWeight: 0, fillColor: '#35393C',
            map: map,
            center: map.getCenter(),
            radius: <%= @user.listening_radius * 1609.344 %>
        };
        radiusCircle = new google.maps.Circle(radiusOptions);

        google.maps.event.addListener(user_marker, "dragend", function(event) {
            var point = user_marker.getPosition();
            map.panTo(point);
                $.ajax({
                    url: '/users/' + <%= @user.id %>,
                    type: 'PUT',
                    data: {latitude: event.latLng.k, longitude: event.latLng.A},
                    dataType: 'json',
                    success: function (data) {
                        updateLists(data);
                        updateMarkers(data.markers);
                    }
                });
        });

        function updateLists(lists) {
            $('.main_list').remove();
            var inactiveCategories = getInactiveCategories();
            $('#newest').append(lists.newest);
            $('#nearest').append(lists.nearest);
            $('#soonest').append(lists.soonest);
//            $('#created').append(lists.created);
//            $('#rsvp').append(lists.rsvp)
            for(var index = 0; index < inactiveCategories.length; index++)
            {
                $("."+inactiveCategories[index]).css('display', 'none');
            }
        }

        function updateMarkers(markers) {
            deleteMarkers();


            markers.forEach(function(marker) {
                addMarker(marker);
            });
        }

        function getInactiveCategories() {
            var categories = $('#format :checkbox');
            var activeCategories = [];
            for(var index = 0; index < categories.length; index++)
            {
                if (categories[index].checked)
                {
                    activeCategories.push(categories[index].id)
                }
            }
            return activeCategories;
        }

        function addMarker(marker_info) {
            var latLng = new google.maps.LatLng(marker_info.latitude, marker_info.longitude);
            var content = marker_info.infowindow;
//
//            infowindow = new InfoBox({
//                content: content,
//                disableAutoPan: false,
//                maxWidth: 150,
//                pixelOffset: new google.maps.Size(-140, 0),
//                zIndex: null,
//                boxStyle: {
//                    background: "url('http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/examples/tipbox.gif') no-repeat",
//                    opacity: 0.9,
//                    width: "280px"
//                },
//                closeBoxMargin: "12px 4px 2px 2px",
//                closeBoxURL: "http://www.google.com/intl/en_us/mapfiles/close.gif",
//                infoBoxClearance: new google.maps.Size(1, 1)
//            });
            var marker = new google.maps.Marker({
                position: latLng,
                map: null,
                title: marker_info.title,
                icon: image_paths[marker_info.category][marker_info.status]
//                infowindow: infowindow
            });

            if (marker_info.drop) {
                marker.setAnimation(google.maps.Animation.DROP);
            }

            var inactiveCategories = getInactiveCategories();
            if (!_.contains(inactiveCategories,marker_info.category))
            {
                marker.setMap(map);
            }

            marker.id = marker_info.id;
            marker.category = marker_info.category;
            pingaMarkers.push(marker);
//            var i = findMarkerById(marker.id);
            //////////////////////////////////////////////////////
/// ADD CHANGE BOXLIST TO DEFAULT!@Q

            var myOptions = {
                content: content,

                disableAutoPan: false,
                maxWidth: 150,
                pixelOffset: new google.maps.Size(-140, 0),
                zIndex: null,
                boxStyle: {
                    background: "url('http://google-maps-utility-library-v3.googlecode.com/svn/trunk/infobox/examples/tipbox.gif') no-repeat",
                    opacity: 0.85,
                    width: "280px"
                },
                closeBoxMargin: "8px 4px 2px 2px",
                closeBoxURL: "<%= asset_path('close-icon-red.png') %>",
                infoBoxClearance: new google.maps.Size(1, 1)
            };

            var ib = new InfoBox(myOptions);
            infos.push(ib);
            var i = infos.length - 1;

            google.maps.event.addListener(marker,'click',(function(marker, i) {
                return function() {
                    closeInfos();
                    infos[i].open(map, this);
                    map.panTo(marker.position);
                }
            })(marker, i));

            google.maps.event.addListener(infos[i],'closeclick',(function(marker, i) {
                return function() {
                    infos[i].close(map, this);
                    map.panTo(user_marker.position);
                    showList();
                }
            })(marker, i));
        }



        function closeInfos(){

            for(var i = 0; i < infos.length; i++)
            {
                infos[i].close();
            }
        }

        // Sets the map on all markers in the array.
        function setAllMap(map) {
            for (var i = 0; i < pingaMarkers.length; i++) {
                pingaMarkers[i].setMap(map);
            }
        }

        // Removes the markers from the map, but keeps them in the array.
        function clearMarkers() {
            setAllMap(null);
        }

        // Shows any markers currently in the array.
        function showMarkers() {
            setAllMap(map);
        }

        // Deletes all markers in the array by removing references to them.
        function deleteMarkers() {
            clearMarkers();
            pingaMarkers = [];
        }

        $("#slider").slider(
                {
                    value: <%= @user.listening_radius %>,
                    min: 0.25,
                    max: 10,
                    step: 0.25,
                    slide: function(event, ui) {
                        $("#slider-value").html(ui.value);
                        user_listening_radius = ui.value
                    }
                }
        );
        $("#slider-value").html($('#slider').slider('value'));
        $( "#slider" ).on( "slidestop", function( event, ui ) {
            $.ajax({
                url: '/users/' + <%= @user.id %>,
                type: 'PUT',
                data: {listening_radius: ui.value},
                dataType: 'json',
                success: function (data) {
                    updateLists(data);
                    updateMarkers(data.markers);
                }
            });
        } );

        window.setInterval(function(){
            var p = user_marker.position;
            radiusCircle.setCenter(new google.maps.LatLng(p.lat(),p.lng()));
            var radius_in_miles = $('#slider').slider('value');
            user_listening_radius = radius_in_miles;
            radiusCircle.setRadius(radius_in_miles * 1609.344);
        }, 50);

        $(document).on('click', '#home', function(event) {
            event.preventDefault();
            showList();
        });

        $(document).on('click', '.ping_title', function(event){ // .ping_link
            event.preventDefault();
            showShow(this.id);
        });

        $(document).on('click', '#new_pinga_button', function(event){
            event.preventDefault();
            showNew();
        });

        $.fn.serializeObject = function()
        {
            var o = {};
            var a = this.serializeArray();
            $.each(a, function() {
                if (o[this.name] !== undefined) {
                    if (!o[this.name].push) {
                        o[this.name] = [o[this.name]];
                    }
                    o[this.name].push(this.value || '');
                } else {
                    o[this.name] = this.value || '';
                }
            });
            return o;
        };

        function showNew() {
            newPingaMarker.setMap(map);
            newPingaMarker.setPosition(user_marker.position);
            user_marker.setIcon('<%= asset_path("#{@user.gender}.png") %>');
            map.panTo(user_marker.position);
            closeInfos();
            $('#show').css('display', 'none');
            $('#index_list').css('display', 'none');
            $('#new').css('display', 'block');
            $('#show_user').css('display', 'none');
            user_marker.setDraggable (false);

        }

        function showList() {
            newPingaMarker.setMap(null);
            user_marker.setIcon('<%= asset_path("pingaMarker.png") %>');
            closeInfos();
            $('#show').css('display', 'none');
            $('#new').css('display', 'none');
            $('#show_user').css('display', 'none');
            $('#index_list').css('display', 'block');
            user_marker.setDraggable (true);
            map.panTo(user_marker.getPosition());
        }

        function showShow(id) {
            newPingaMarker.setMap(null);
            user_marker.setDraggable (true);
            user_marker.setIcon('<%= asset_path("pingaMarker.png") %>');
            var marker = findMarkerById(id);
//            var infowindow = new google.maps.InfoWindow();
            var content = marker.infowindow;
//            closeInfos();
//            infowindow.setContent(content);
//            infowindow.open(map,marker);
//            infos[0]=infowindow;
//            google.maps.event.addListener(infowindow,'closeclick',function(){
//                showList();
//            });
            map.panTo(marker.position);
            $.ajax({
                url: '/pingas/' + id,
                type: 'GET',
                success: function (data) {
                    $("#show").html(data.show);
                    $('#show').css('display', 'block');
                    $('#show_user').css('display', 'none');
                    $('#index_list').css('display', 'none');
                    $('#new').css('display', 'none');

                }
            });

        }

        function findMarkerById(id) {
            for(var index = 0; index < pingaMarkers.length; index++)
            {
                if (pingaMarkers[index].id == id)
                {
                    return pingaMarkers[index];
                }
            }
        }

        function findMarkerIndex(id) {
            for(var index = 0; index < pingaMarkers.length; index++)
            {
                if (pingaMarkers[index].id == id)
                {
                    return index;
                }
            }
        }

//        DELETE PINGA

        $(document).on('click', '.delete_pinga_button', function(event){
            event.preventDefault();
            deleteToSocket(this.id);
            showList();
            closeInfos();
        });

//        CREATE PINGA STUFF

        $(document).on("click", ".submit", function(event){
            event.preventDefault();
            $("#errors").empty();
            var title = $('input[name="pinga[title]"]').val();
            var description = $('textarea[name="pinga[description]"]').val();
            var address = $('input[name="pinga[address]"]').val();
            var startTime = $('#pinga_start_time').val();
            if (title === ""){
                $('#errors').append("<li>Title is a mandatory field.</li>")
            }
            if (description === ""){
                $('#errors').append("<li>Description is a mandatory field.</li>")
            }
            if (address === "") {
                $('#errors').append("<li>Event address is a mandatory field.</li>")
            }
            if (startTime === "" && $('#pinga_start_time').css("display") != "none"){
                $('#errors').append("<li>Please select a start time for your event.</li>")
            }

            if ($("#errors").children().size() === 0 && $('#start-time-validations').text() == ""){

                var day = $('#today-tomorrow').text();
                if (day == "") {
                    var today = new Date();
                } else {
                    var today = /\w{2,3} \w* \d{1,2}/.exec(day)[0];
                }
                data = $('form').serializeObject();
                putInCreatedList(data);
                data.today = today;
                submitToSocket(data);
                showList();
                $('form')[0].reset();
                $('#today-tomorrow').html('');
                $('#start-time-validations').html('');
            }
        });

        function putInCreatedList(data)
        {
            $.ajax({
                url: '/users/' + <%= @user.id %>,
                type: 'PUT',
                success: function (data) {
                    updateLists(data);
                }
            });
            console.log(data);
        }

        var geocoder = new google.maps.Geocoder();

        google.maps.event.addListener(newPingaMarker, 'dragend', function() {
            var latLng = newPingaMarker.getPosition();
            geocoder.geocode({'latLng': latLng}, function(results, status) {
                $('#autocomplete').val(results[0].formatted_address);
            });
        });

        autocomplete = new google.maps.places.Autocomplete(
                (document.getElementById('autocomplete')),
                { types: ['geocode'] }
        );

        google.maps.event.addListener(autocomplete, 'place_changed', function() {
            var place = autocomplete.getPlace();
            map.panTo(place.geometry.location);
            map.setZoom(13);
            newPingaMarker.setPosition(place.geometry.location);
            newPingaMarker.setVisible(true);
        });

        if (navigator.geolocation) {
            navigator.geolocation.getCurrentPosition(function(position) {
                var geolocation = new google.maps.LatLng(
                        position.coords.latitude, position.coords.longitude);
                autocomplete.setBounds(new google.maps.LatLngBounds(geolocation,
                        geolocation));
            });
        };

        google.maps.event.addListener(newPingaMarker, 'click', function() {
            map.setZoom(13);
            map.setCenter(newPingaMarker.getPosition());
        });







//    SOCKET STUFF

        dispatcher.bind('pingas.new', function(pinga) {
            addMarker(pinga.marker);
            $.ajax({
                url: '/users/' + <%= @user.id %>,
                type: 'PUT',
                success: function (data) {
                    updateLists(data);
                }
            });
        });

        channel.bind('new_from_phone', function(message) {
            console.log('new pinga from phone' + message);
            var pinga = JSON.parse( message );
            addMarker(pinga.marker);
            $.ajax({
                url: '/users/' + <%= @user.id %>,
                type: 'PUT',
                success: function (data) {
                    updateLists(data);
                }
            });
        });



        dispatcher.bind('pingas.destroy', function(pingaId) {
            var markerIndex = findMarkerIndex(pingaId);
            pingaMarkers[markerIndex].setMap(null);
            if (markerIndex > -1) {
                pingaMarkers.splice(markerIndex, 1);
            }
            $('.' + pingaId).remove();
            $.ajax({
                url: '/users/' + <%= @user.id %>,
                type: 'PUT',
                success: function (data) {
                    updateLists(data);
                }
            });
        });

        channel.bind('update', function(message) {
            var pinga = JSON.parse( message );
            var markerIndex = findMarkerIndex(pinga.id);
            if (pinga.status == "expired")
            {
                pingaMarkers[markerIndex].setMap(null);
            }
            else if (within_listening_radius(pingaMarkers[markerIndex], user_marker))
            {
                pingaMarkers[markerIndex].setIcon(image_paths[pinga.category][pinga.status]);
            }
            $.ajax({
                url: '/users/' + <%= @user.id %>,
                type: 'PUT',
                success: function (data) {
                    updateLists(data);
                }
            });
        });


        function within_listening_radius(pinga, user)
        {
            if (getDistanceFromLatLonInMi(pinga.position.k, pinga.position.A, user.position.k, user.position.A) < user_listening_radius)
                return true;
            return false;
        }

        function getDistanceFromLatLonInMi(lat1,lon1,lat2,lon2) {
            var R = 3958.76; // Radius of the earth in mi
            var dLat = deg2rad(lat2-lat1);  // deg2rad below
            var dLon = deg2rad(lon2-lon1);
            var a =
                            Math.sin(dLat/2) * Math.sin(dLat/2) +
                            Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *
                            Math.sin(dLon/2) * Math.sin(dLon/2)
                    ;
            var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a));
            var d = R * c; // Distance in km
            return d;
        }

        function deg2rad(deg) {
            return deg * (Math.PI/180)
        }


    }




</script>